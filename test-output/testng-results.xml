<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-07T02:01:48 IST" name="Suite" finished-at="2023-03-07T02:03:46 IST" duration-ms="117115">
    <groups>
      <group name="smoke">
        <method signature="VerifyItemNamesInCartTest.VerifyItemWithCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" name="VerifyItemWithCorrectName" class="Regression.VerifyItemNamesInCartTest"/>
        <method signature="VerifyItemNamesInCartTest.VerifyItemWithInCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" name="VerifyItemWithInCorrectName" class="Regression.VerifyItemNamesInCartTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-03-07T02:01:48 IST" name="ErrorValidationTest" finished-at="2023-03-07T02:02:14 IST" duration-ms="25774">
      <class name="Regression.ErrorValidationTest">
        <test-method is-config="true" signature="readconf()[pri:0, instance:Regression.ErrorValidationTest@3d9c13b5]" started-at="2023-03-07T02:01:48 IST" name="readconf" finished-at="2023-03-07T02:01:48 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readconf -->
        <test-method signature="verifyerrorlog()[pri:0, instance:Regression.ErrorValidationTest@3d9c13b5]" started-at="2023-03-07T02:01:49 IST" name="verifyerrorlog" finished-at="2023-03-07T02:02:13 IST" duration-ms="23976" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or passwordsss.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or passwordsss.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Regression.ErrorValidationTest.verifyerrorlog(ErrorValidationTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyerrorlog -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.ErrorValidationTest@3d9c13b5]" started-at="2023-03-07T02:02:13 IST" name="CloseApp" finished-at="2023-03-07T02:02:14 IST" duration-ms="1636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyerrorlog status=FAILURE method=ErrorValidationTest.verifyerrorlog()[pri:0, instance:Regression.ErrorValidationTest@3d9c13b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- Regression.ErrorValidationTest -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2023-03-07T02:02:16 IST" name="StandAloneTest" finished-at="2023-03-07T02:03:05 IST" duration-ms="49782">
      <class name="Regression.StandAloneTest">
        <test-method is-config="true" signature="readconf()[pri:0, instance:Regression.StandAloneTest@4c1f22f3]" started-at="2023-03-07T02:02:16 IST" name="readconf" finished-at="2023-03-07T02:02:16 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readconf -->
        <test-method signature="tcc01()[pri:0, instance:Regression.StandAloneTest@4c1f22f3]" started-at="2023-03-07T02:02:16 IST" name="tcc01" finished-at="2023-03-07T02:02:51 IST" duration-ms="35680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tcc01 -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.StandAloneTest@4c1f22f3]" started-at="2023-03-07T02:02:51 IST" name="CloseApp" finished-at="2023-03-07T02:02:52 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tcc01 status=SUCCESS method=StandAloneTest.tcc01()[pri:0, instance:Regression.StandAloneTest@4c1f22f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
        <test-method signature="verifyorder()[pri:0, instance:Regression.StandAloneTest@4c1f22f3]" started-at="2023-03-07T02:02:52 IST" name="verifyorder" finished-at="2023-03-07T02:03:05 IST" depends-on-methods="Regression.StandAloneTest.tcc01" duration-ms="13527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyorder -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.StandAloneTest@4c1f22f3]" started-at="2023-03-07T02:03:05 IST" name="CloseApp" finished-at="2023-03-07T02:03:05 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyorder status=SUCCESS method=StandAloneTest.verifyorder()[pri:0, instance:Regression.StandAloneTest@4c1f22f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- Regression.StandAloneTest -->
    </test> <!-- StandAloneTest -->
    <test started-at="2023-03-07T02:03:06 IST" name="VerifyItemNamesInCartTest" finished-at="2023-03-07T02:03:46 IST" duration-ms="39855">
      <class name="Regression.VerifyItemNamesInCartTest">
        <test-method is-config="true" signature="readconf()[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" started-at="2023-03-07T02:03:06 IST" name="readconf" finished-at="2023-03-07T02:03:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readconf -->
        <test-method signature="VerifyItemWithCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" started-at="2023-03-07T02:03:06 IST" name="VerifyItemWithCorrectName" data-provider="getdata" finished-at="2023-03-07T02:03:25 IST" duration-ms="19743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Hyderabad@2023, product=zara coat 3, email=78bikash.hyd@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyItemWithCorrectName -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" started-at="2023-03-07T02:03:25 IST" name="CloseApp" finished-at="2023-03-07T02:03:26 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyItemWithCorrectName status=SUCCESS method=VerifyItemNamesInCartTest.VerifyItemWithCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
        <test-method signature="VerifyItemWithInCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" started-at="2023-03-07T02:03:26 IST" name="VerifyItemWithInCorrectName" data-provider="getdata" finished-at="2023-03-07T02:03:45 IST" duration-ms="19453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Hyderabad@2023, product=zara coat 3, email=78bikash.hyd@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyItemWithInCorrectName -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868]" started-at="2023-03-07T02:03:45 IST" name="CloseApp" finished-at="2023-03-07T02:03:46 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyItemWithInCorrectName status=SUCCESS method=VerifyItemNamesInCartTest.VerifyItemWithInCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@528c868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- Regression.VerifyItemNamesInCartTest -->
    </test> <!-- VerifyItemNamesInCartTest -->
  </suite> <!-- Suite -->
</testng-results>
